      MODULE NMPRD4P
      USE SIZES, ONLY: DPSIZE
      USE NMPRD4,ONLY: VRBL
      IMPLICIT NONE
      SAVE
      REAL(KIND=DPSIZE), DIMENSION (:),POINTER ::COM
      REAL(KIND=DPSIZE), POINTER ::CE50,BASE,Y,A00032,A00034,A00044
      REAL(KIND=DPSIZE), POINTER ::A00045,C00031
      CONTAINS
      SUBROUTINE ASSOCNMPRD4
      COM=>VRBL
      CE50=>COM(00001);BASE=>COM(00002);Y=>COM(00003)
      A00032=>COM(00004);A00034=>COM(00005);A00044=>COM(00006)
      A00045=>COM(00007);C00031=>COM(00008)
      END SUBROUTINE ASSOCNMPRD4
      END MODULE NMPRD4P
      SUBROUTINE PRED (ICALL,NEWIND,THETA,DATREC,INDXS,F,G,H)                 
      USE NMPRD4P
      USE SIZES,     ONLY: DPSIZE,ISIZE
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      USE NMPRD_REAL,ONLY: ETA,EPS                                            
      USE NMPRD_INT, ONLY: MSEC=>ISECDER,MFIRST=>IFRSTDER,IFIRSTEM
      USE NMPRD_INT, ONLY: MDVRES,ETASXI,NPDE_MODE
      USE NMPRD_REAL, ONLY: DV_LOQ
      USE NMPRD_INT, ONLY: NEWL2
      USE NMBAYES_REAL, ONLY: LDF                                             
      IMPLICIT REAL(KIND=DPSIZE) (A-Z)                                        
      REAL(KIND=DPSIZE) :: DATREC                                             
      SAVE
      INTEGER(KIND=ISIZE) :: ICALL,NEWIND,INDXS                               
      REAL(KIND=DPSIZE) :: G(GPRD,*),H(HPRD,*)                                
      DIMENSION :: THETA(*),DATREC(*),INDXS(*)                                
      INTEGER(KIND=ISIZE) :: FIRSTEM
      FIRSTEM=IFIRSTEM
      IF (ICALL <= 1) CALL ASSOCNMPRD4
      IF (ICALL == 4) THEN
      IF (NEWIND /= 2) THEN
      CALL SIMETA(ETA)
      IF (IQUIT == 1) RETURN
      ENDIF
      IF (NEWL2 == 1) THEN
      CALL SIMEPS(EPS)
      IF (IQUIT == 1) RETURN
      ENDIF
      ELSE
      IF (NEWIND /= 2) THEN
      CALL GETETA(ETA)
      IF (IQUIT == 1) RETURN
       EPS(001)=0.D0
      ENDIF
      ENDIF
 !  level            0           0
      CE=DATREC(002)
      B00001=DEXP(ETA(001)) 
      CE50=THETA(001)*B00001 
      BASE=THETA(002) 
      B00002=CE50+CE 
      B00003=1.D0-CE/B00002 
      F=BASE*B00003 
      Y=F+EPS(001) 
!                      C00031 = DERIVATIVE OF Y W.R.T. EPS(001)
      C00031=1.D0 
      IF (FIRSTEM == 1) THEN !1
!                      A00032 = DERIVATIVE OF CE50 W.R.T. ETA(001)
      A00032=THETA(001)*B00001 
      B00004=CE/B00002/B00002 
!                      A00036 = DERIVATIVE OF B00003 W.R.T. ETA(001)
      A00036=B00004*A00032 
!                      A00037 = DERIVATIVE OF F W.R.T. ETA(001)
      A00037=BASE*A00036 
!                      A00044 = DERIVATIVE OF Y W.R.T. ETA(001)
      A00044=A00037 
      G(001,1)=A00044
      ENDIF !1
      IF (MSEC == 1) THEN
!                      A00034 = DERIVATIVE OF A00032 W.R.T. ETA(001)
      A00034=THETA(001)*B00001 
      B00006=-CE/B00002/B00002/B00002 
!                      A00039 = DERIVATIVE OF B00004 W.R.T. ETA(001)
      A00039=B00006*A00032 
      B00007=-CE/B00002/B00002/B00002 
!                      A00040 = DERIVATIVE OF B00004 W.R.T. ETA(001)
      A00040=B00007*A00032+A00039 
!                      A00041 = DERIVATIVE OF A00036 W.R.T. ETA(001)
      A00041=A00032*A00040 
!                      A00042 = DERIVATIVE OF A00036 W.R.T. ETA(001)
      A00042=B00004*A00034+A00041 
!                      A00043 = DERIVATIVE OF A00037 W.R.T. ETA(001)
      A00043=BASE*A00042 
!                      A00045 = DERIVATIVE OF A00044 W.R.T. ETA(001)
      A00045=A00043 
!                      A00045 = 2ND DERIV OF F W.R.T. ETA(001), ETA(001)
      G(001,002)=A00045
      ENDIF
      H(001,1)=C00031
      IF (FIRSTEM == 1) THEN !2
      ENDIF !2
      F=Y
      RETURN
      END
      SUBROUTINE FSIZESR(NAME_FSIZES,F_SIZES)
      USE SIZES, ONLY: ISIZE
      INTEGER(KIND=ISIZE), DIMENSION(*) :: F_SIZES
      CHARACTER(LEN=*),    DIMENSION(*) :: NAME_FSIZES
      NAME_FSIZES(01)='LTH'; F_SIZES(01)=2
      NAME_FSIZES(02)='LVR'; F_SIZES(02)=2
      NAME_FSIZES(03)='LVR2'; F_SIZES(03)=1
      NAME_FSIZES(04)='LPAR'; F_SIZES(04)=4
      NAME_FSIZES(05)='LPAR3'; F_SIZES(05)=0
      NAME_FSIZES(06)='NO'; F_SIZES(06)=0
      NAME_FSIZES(07)='MMX'; F_SIZES(07)=1
      NAME_FSIZES(08)='LNP4'; F_SIZES(08)=0
      NAME_FSIZES(09)='LSUPP'; F_SIZES(09)=1
      NAME_FSIZES(10)='LIM7'; F_SIZES(10)=0
      NAME_FSIZES(11)='LWS3'; F_SIZES(11)=0
      NAME_FSIZES(12)='MAXIDS'; F_SIZES(12)=4
      NAME_FSIZES(13)='LIM1'; F_SIZES(13)=0
      NAME_FSIZES(14)='LIM2'; F_SIZES(14)=0
      NAME_FSIZES(15)='LIM3'; F_SIZES(15)=0
      NAME_FSIZES(16)='LIM4'; F_SIZES(16)=0
      NAME_FSIZES(17)='LIM5'; F_SIZES(17)=0
      NAME_FSIZES(18)='LIM6'; F_SIZES(18)=0
      NAME_FSIZES(19)='LIM8'; F_SIZES(19)=0
      NAME_FSIZES(20)='LIM11'; F_SIZES(20)=0
      NAME_FSIZES(21)='LIM13'; F_SIZES(21)=0
      NAME_FSIZES(22)='LIM15'; F_SIZES(22)=0
      NAME_FSIZES(23)='LIM16'; F_SIZES(23)=0
      NAME_FSIZES(24)='MAXRECID'; F_SIZES(24)=0
      NAME_FSIZES(25)='PC'; F_SIZES(25)=0
      NAME_FSIZES(26)='PCT'; F_SIZES(26)=1
      NAME_FSIZES(27)='PIR'; F_SIZES(27)=1
      NAME_FSIZES(28)='PD'; F_SIZES(28)=3
      NAME_FSIZES(29)='PAL'; F_SIZES(29)=0
      NAME_FSIZES(30)='MAXFCN'; F_SIZES(30)=0
      NAME_FSIZES(31)='MAXIC'; F_SIZES(31)=0
      NAME_FSIZES(32)='PG'; F_SIZES(32)=0
      NAME_FSIZES(33)='NPOPMIXMAX'; F_SIZES(33)=0
      NAME_FSIZES(34)='MAXOMEG'; F_SIZES(34)=1
      NAME_FSIZES(35)='MAXPTHETA'; F_SIZES(35)=3
      NAME_FSIZES(36)='MAXITER'; F_SIZES(36)=20
      NAME_FSIZES(37)='ISAMPLEMAX'; F_SIZES(37)=0
      NAME_FSIZES(38)='DIMTMP'; F_SIZES(38)=0
      NAME_FSIZES(39)='DIMCNS'; F_SIZES(39)=0
      NAME_FSIZES(40)='DIMNEW'; F_SIZES(40)=0
      NAME_FSIZES(41)='PDT'; F_SIZES(41)=4
      NAME_FSIZES(42)='LADD_MAX'; F_SIZES(42)=0
      NAME_FSIZES(43)='MAXSIDL'; F_SIZES(43)=0
      NAME_FSIZES(44)='NTT'; F_SIZES(44)=2
      NAME_FSIZES(45)='NOMEG'; F_SIZES(45)=1
      NAME_FSIZES(46)='NSIGM'; F_SIZES(46)=1
      NAME_FSIZES(47)='PPDT'; F_SIZES(47)=2
      RETURN
      END SUBROUTINE FSIZESR
      SUBROUTINE MUMODEL2(THETA,MU_,ICALL,IDEF,NEWIND,&
      EVTREC,DATREC,IREV,NVNT,INDXS,F,G,H,IRGG,GG,NETAS)
      USE NMPRD4P
      USE SIZES,     ONLY: DPSIZE,ISIZE
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      USE NMPRD_REAL,ONLY: ETA,EPS
      USE NMPRD_INT, ONLY: MSEC=>ISECDER,MFIRST=>IFRSTDER,IFIRSTEM
      USE NMPRD_INT, ONLY: MDVRES,ETASXI,NPDE_MODE
      USE NMPRD_REAL, ONLY: DV_LOQ
      USE NMPRD_INT, ONLY: NEWL2
      USE NMBAYES_REAL, ONLY: LDF
      IMPLICIT REAL(KIND=DPSIZE) (A-Z)
      REAL(KIND=DPSIZE)   :: MU_(*)
      REAL(KIND=DPSIZE) :: DATREC
      SAVE
      INTEGER(KIND=ISIZE) :: ICALL,NEWIND,INDXS
      REAL(KIND=DPSIZE) :: G(GPRD,*),H(HPRD,*)
      DIMENSION :: THETA(*),DATREC(*),INDXS(*)
      RETURN
      END
